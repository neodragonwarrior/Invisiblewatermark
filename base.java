/*
 * base.java
 *
 * Created on April 13, 2008, 11:32 AM
 */
package watermarking;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  Administrator
 */
public class base extends javax.swing.JFrame {

    File f1;
    File f2;

    public base() {
        initComponents();
    
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        selectfield = new javax.swing.JTextField();
        embedbrowse = new javax.swing.JButton();
        embedmsg = new javax.swing.JRadioButton();
        embedfile = new javax.swing.JRadioButton();
        basenext = new javax.swing.JButton();
        selectbasefile = new javax.swing.JLabel();
        whattoembed = new javax.swing.JLabel();
        baseback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("select basefile");
        getContentPane().setLayout(null);
        getContentPane().add(selectfield);
        selectfield.setBounds(130, 90, 130, 20);

        embedbrowse.setText("browse");
        embedbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                embedbrowseActionPerformed(evt);
            }
        });
        getContentPane().add(embedbrowse);
        embedbrowse.setBounds(280, 90, 100, 20);

        buttonGroup1.add(embedmsg);
        embedmsg.setText("message");
        getContentPane().add(embedmsg);
        embedmsg.setBounds(20, 200, 80, 23);

        buttonGroup1.add(embedfile);
        embedfile.setText("file");
        getContentPane().add(embedfile);
        embedfile.setBounds(130, 200, 100, 20);

        basenext.setText("Next");
        basenext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basenextActionPerformed(evt);
            }
        });
        getContentPane().add(basenext);
        basenext.setBounds(190, 250, 80, 23);

        selectbasefile.setText("select base file");
        getContentPane().add(selectbasefile);
        selectbasefile.setBounds(20, 90, 110, 14);

        whattoembed.setText("WHAT TO EMBED ?");
        getContentPane().add(whattoembed);
        whattoembed.setBounds(30, 160, 120, 30);

        baseback.setText("Back");
        baseback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basebackActionPerformed(evt);
            }
        });
        getContentPane().add(baseback);
        baseback.setBounds(290, 250, 80, 23);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-398)/2, (screenSize.height-334)/2, 398, 334);
    }// </editor-fold>//GEN-END:initComponents
    private void embedbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_embedbrowseActionPerformed
     
        JFileChooser fc = new JFileChooser();
      
        fc.addChoosableFileFilter(new imgfilter());
        fc.setAccessory(new FilePreviewer(fc));
     
        int result = fc.showDialog(null, "SELECT IMAGE");
        if (result == JFileChooser.APPROVE_OPTION) {
            f1 = fc.getSelectedFile();
        }else if (result == JFileChooser.CANCEL_OPTION) {
                    fc.setVisible(false);
                }
      
        if ((f1.getName().toLowerCase().endsWith(".jpg") ||
                f1.getName().toLowerCase().endsWith(".jpeg")||
                f1.getName().toLowerCase().endsWith(".bmp") ||
                f1.getName().toLowerCase().endsWith(".gif") ||
                f1.getName().toLowerCase().endsWith(".png")||
                f1.getName().toLowerCase().endsWith(".tif")) == false)
            JOptionPane.showMessageDialog(null, "Please select an image file"
               , "information!",JOptionPane.INFORMATION_MESSAGE);
        else if (f1.exists() == false) {
            JOptionPane.showMessageDialog(this, "File not found\nVerify whether correct filename was given");
        } else {
            overwrite avo = new overwrite(f1);
            int i = avo.getFeatures();
            if (i < 0 || i > 7) {
                f2 = new File("Copy of " + f1.getName());
                selectfield.setText(f2.getName());
            }
        else{
                this.setVisible(false);
          JOptionPane.showMessageDialog(null, "Information already" +
                    " exisits in file,you cant change it\n" +
                    "Please choose another file", "WARNING!",
                    JOptionPane.WARNING_MESSAGE);
         new base().setVisible(true);   
        }//GEN-LAST:event_embedbrowseActionPerformed
    }                                           
    }
    private void basenextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basenextActionPerformed
    
       if (selectfield.getText().length() < 1) {
            JOptionPane.showMessageDialog(this, "please select any file");
        } else {

            if (buttonGroup1.getSelection() == null) {
                JOptionPane.showMessageDialog(this, "please select any option");
            } else {
                if (embedmsg.isSelected() == true) {
                    new embedmsg(f1, f2).setVisible(true);
                    setVisible(false);
                } else if (embedfile.isSelected() == true) {
                    new selectfile(f1, f2).setVisible(true);
                    setVisible(false);

                }
            }
        }
}//GEN-LAST:event_basenextActionPerformed

    private void basebackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basebackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new select().setVisible(true);
    }//GEN-LAST:event_basebackActionPerformed


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new base().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baseback;
    private javax.swing.JButton basenext;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton embedbrowse;
    private javax.swing.JRadioButton embedfile;
    private javax.swing.JRadioButton embedmsg;
    private javax.swing.JLabel selectbasefile;
    private javax.swing.JTextField selectfield;
    private javax.swing.JLabel whattoembed;
    // End of variables declaration//GEN-END:variables
    
}
