

package watermarking;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;


public class info extends javax.swing.JFrame {
 
    private SteganoInformation details;
    
  private info()
  {
     initComponents(); 
  }
  public info(SteganoInformation details)
    {
       initComponents();
     
         this.details=details;
         basefilename.setText(details.getFile().getName());
         byte features=details.getFeatures();
      //   System.out.println(""+features);
          if (features == watermark.UUM || features == watermark.UEM || 
          features == watermark.CUM ||features == watermark.CEM) {
            contains.setText("Embeded Message");
            }
         else {
            contains.setText("Embeded File");
        }
          if (features == watermark.CUM || features == watermark.CUF ||
          features == watermark.CEM || features == watermark.CEF) {
            compress.setText("YES");
        } else {
            compress.setText("NO");
        }
if (features == watermark.UEM || features == watermark.CEM ||
    features == watermark.UEF || features == watermark.CEF) 
        {
            encrypted.setText("YES");
        } else {
            encrypted.setText("NO");
        }
    }

     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infopanel = new javax.swing.JPanel();
        infolabel2 = new javax.swing.JLabel();
        infolabel3 = new javax.swing.JLabel();
        infolabel4 = new javax.swing.JLabel();
        infolabel6 = new javax.swing.JLabel();
        basefilename = new javax.swing.JLabel();
        contains = new javax.swing.JLabel();
        compress = new javax.swing.JLabel();
        encrypted = new javax.swing.JLabel();
        infolabel1 = new javax.swing.JLabel();
        inforetrieve = new javax.swing.JButton();
        infocancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Base file information");
        getContentPane().setLayout(null);

        infopanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("")));
        infopanel.setLayout(null);

        infolabel2.setText("Base file");
        infopanel.add(infolabel2);
        infolabel2.setBounds(30, 10, 90, 14);

        infolabel3.setText("Contains");
        infopanel.add(infolabel3);
        infolabel3.setBounds(30, 50, 90, 14);

        infolabel4.setText("Compressed");
        infopanel.add(infolabel4);
        infolabel4.setBounds(30, 90, 80, 14);

        infolabel6.setText("Encrypted");
        infopanel.add(infolabel6);
        infolabel6.setBounds(30, 130, 100, 14);

        basefilename.setText("basefilename");
        infopanel.add(basefilename);
        basefilename.setBounds(130, 0, 130, 30);

        contains.setText("infolabel9");
        infopanel.add(contains);
        contains.setBounds(130, 40, 130, 30);

        compress.setText("compress");
        infopanel.add(compress);
        compress.setBounds(130, 80, 130, 30);

        encrypted.setText("encrypt");
        infopanel.add(encrypted);
        encrypted.setBounds(130, 120, 100, 30);

        getContentPane().add(infopanel);
        infopanel.setBounds(60, 40, 270, 170);

        infolabel1.setText("File Information");
        getContentPane().add(infolabel1);
        infolabel1.setBounds(80, 20, 120, 14);

        inforetrieve.setText("retrieve");
        inforetrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inforetrieveActionPerformed(evt);
            }
        });
        getContentPane().add(inforetrieve);
        inforetrieve.setBounds(210, 260, 80, 20);

        infocancel.setText("Cancel");
        infocancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infocancelActionPerformed(evt);
            }
        });
        getContentPane().add(infocancel);
        infocancel.setBounds(310, 260, 80, 20);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-408)/2, (screenSize.height-334)/2, 408, 334);
    }// </editor-fold>//GEN-END:initComponents

    private void inforetrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inforetrieveActionPerformed
            String password=null;
           
            if(encrypted.getText().equals("YES"))
            {
                Object message[]=new Object[3];
                message[0]=new JLabel("This is an encrypted zone.");
                message[1]=new JLabel("Please enter the password to continue");
                JPasswordField pass=new JPasswordField(10);
                message[2]=pass;  
                String options[]={"Retrieve now","Cancel"};
              do   
              {
               int result= JOptionPane.showOptionDialog(null, message, "Encrypted zone", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                    if(result==1)
                        return;
               password= new String(pass.getPassword());
                if(password.length()<8)
                      JOptionPane.showMessageDialog(null,"Invalid Password");
            }while(password.length()<8);
            }
            if(contains.getText().equals("Embeded Message"))
            {
                String message=watermark.retrieveMessage(details,password);
	        if(message!=null && !message.equals("#FAILED#"))
                {
                    new MessageDisplay(message);
                    setVisible(false);
                }
		else
		{
		 message= watermark.getMessage();
		if(message!= null && message.equals("Incorrect Password"))
                JOptionPane.showMessageDialog(null, "Please check whether correct\npassword is entered or not", "Invalid password!", JOptionPane.ERROR_MESSAGE);
		else 
		 JOptionPane.showMessageDialog(null, "Errorllll!\n"+ watermark.getMessage(), "Oops, Error!", JOptionPane.ERROR_MESSAGE);
		}
            }
             if(contains.getText().equals("Embeded File"))
	    {
               
	     boolean res=watermark.retrieveFile(details,password);
             System.out.println("boo:"+res);
             
             if(!res)
             {
                 System.out.println("res"+res);
	      String message=watermark.getMessage();
              System.out.println("fff");
	      if(message!= null)
	       if(message.equals("Incorrect Password"))
                 JOptionPane.showMessageDialog(null, "Please check whether correct\npassword is entered or not", "Invalid password!", JOptionPane.ERROR_MESSAGE);
	      /* else if(message.equals("File Exists"))
	       {							
		int result= JOptionPane.showConfirmDialog(null, "The data file '"+ details.getdataFile().getName()+ 
                        "' being retrieved already exists!\nWould you like to OVERWRITE it?",
                        "Confirm OVERWRITE", JOptionPane.YES_NO_OPTION);
		if(result== JOptionPane.NO_OPTION)
		  return;
     		 watermark.retrieveFile(details, password);
		 showFile(details);
	       }*/
	       else
		JOptionPane.showMessageDialog(null, "Error!\n"+watermark.getMessage(), "Oops, Error!", JOptionPane.ERROR_MESSAGE);
	     }
	     else
	      showFile(details);
     	    }
        
    }//GEN-LAST:event_inforetrieveActionPerformed

    private void infocancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infocancelActionPerformed
      setVisible(false);
      new retrieve().setVisible(true);
    }//GEN-LAST:event_infocancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             new info().setVisible(true);
                    
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel basefilename;
    private javax.swing.JLabel compress;
    private javax.swing.JLabel contains;
    private javax.swing.JLabel encrypted;
    private javax.swing.JButton infocancel;
    private javax.swing.JLabel infolabel1;
    private javax.swing.JLabel infolabel2;
    private javax.swing.JLabel infolabel3;
    private javax.swing.JLabel infolabel4;
    private javax.swing.JLabel infolabel6;
    private javax.swing.JPanel infopanel;
    private javax.swing.JButton inforetrieve;
    // End of variables declaration//GEN-END:variables

    private void showFile(SteganoInformation details) {
        setVisible(false);
       
         int result = JOptionPane.showConfirmDialog(null,"The data file '" + 
                 details.getdataFile().getName() + 
                 "' has been successfully retrieved from the basefile\n" + 
                 details.getFile().getName() + 
                 "\n\nWould you like to open it now?", "Operation successful",
                 JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            String osName = System.getProperty("os.name");
            if (osName.length() >= 7) {
                osName = osName.substring(0, 7);
            }
            if (osName.compareToIgnoreCase("windows") == 0) {
                try {
                    System.out.println("filename"+details.getdataFile().getPath());
                    Runtime.getRuntime().exec("explorer " + details.getdataFile().getPath());
                    
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Oops!! Error!\n" + ex, "Error!", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Sorry!\nI just discovered that you are not running a Windows operating system.\nI will not be able to open this file for you at this time.", "Non windows OS!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
          new select().setVisible(true);
    }
}
    
    

